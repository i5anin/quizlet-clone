const fs = require('fs');
const path = require('path');
const { stringify } = require('csv-stringify/sync');

// üìå –í—Ö–æ–¥–Ω–æ–π –∏ –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
const INPUT_FILE = path.join(__dirname, 'restored_data.json');
const OUTPUT_FILE = path.join(__dirname, 'messages.csv');

// ‚úÖ –ß—Ç–µ–Ω–∏–µ –∏ —Ä–∞–∑–±–æ—Ä JSON
const raw = fs.readFileSync(INPUT_FILE, 'utf-8');
const { messages } = JSON.parse(raw);

// ‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
const rows = messages.map(msg => ({
    id: msg.id,
    created_at: msg.date,
    question: msg.poll?.question || '',
    explanation: msg.poll?.explanation || '',
    tags: JSON.stringify(msg.tags || []),
    type: msg.type,
    answers: JSON.stringify(msg.poll?.answers || [])
}));

// ‚úÖ –§–æ—Ä–º–∏—Ä—É–µ–º CSV
const csv = stringify(rows, {
    header: true,
    columns: ['id', 'created_at', 'question', 'explanation', 'tags', 'type', 'answers']
});

// ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º
fs.writeFileSync(OUTPUT_FILE, csv, 'utf-8');
console.log('‚úÖ messages.csv —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.');
